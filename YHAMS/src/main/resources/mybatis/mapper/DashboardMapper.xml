<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yhams.dashboard.DashboardMapper">


	<select id="getLabels" resultType="String">
	
		SELECT * 
					
			 FROM (
				
					SELECT DATE_FORMAT(NOW(), '%c월') AS MONTH, 1 AS RNUM FROM DUAL
						UNION ALL 
					SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%c월') AS MONTH, 2 AS RNUM FROM DUAL
						UNION ALL 
					SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 2 MONTH), '%c월') AS MONTH, 3 AS RNUM FROM DUAL
						UNION ALL 
					SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 3 MONTH), '%c월') AS MONTH, 4 AS RNUM FROM DUAL
						UNION ALL 
					SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 4 MONTH), '%c월') AS MONTH, 5 AS RNUM FROM DUAL
				
				) T1
		
		ORDER BY T1.RNUM DESC
	
	</select>
	

	<select id="getSalaryStatistics" parameterType="java.util.HashMap" resultType="int">
	
		SELECT  IFNULL(Y.AMOUNT, 0) AS AMOUNT
               
		FROM (	
				SELECT DATE_FORMAT(NOW(), '%Y-%m') AS SAL_DATE FROM DUAL
					UNION ALL 
				SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m') AS SAL_DATE FROM DUAL
					UNION ALL 
				SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 2 MONTH), '%Y-%m') AS SAL_DATE FROM DUAL
					UNION ALL 
				SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 3 MONTH), '%Y-%m') AS SAL_DATE FROM DUAL
					UNION ALL 
				SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 4 MONTH), '%Y-%m') AS SAL_DATE FROM DUAL
		      ) X
		 
		 
		 LEFT OUTER JOIN
		 (	SELECT  USER_SEQ,
			        SAL_DATE,
					SUM(AMOUNT) AS AMOUNT  
			   FROM TB_TRAN_SALARY
			  WHERE USER_SEQ = #{USER_SEQ}
			  GROUP BY USER_SEQ, SAL_DATE	 
		 ) Y
		 
		 ON X.SAL_DATE = Y.SAL_DATE
		 
		 ORDER BY X.SAL_DATE ASC
	
	</select>
	
	
	<select id="getAssetStatistics" parameterType="java.util.HashMap" resultType="int">
	
	
		SELECT IFNULL(X.ASSET, 0) AS ASSET
	
		  FROM  (
					  SELECT  TTAS.USER_SEQ,
							  DATE_FORMAT(NOW(), '%Y-%m') AS SAL_DATE,	
					          SUM(TTAS.DEPOSIT_TOTAL) - SUM(TTAS.WITHDRL_TOTAL) AS ASSET
					  FROM    TB_TRAN_ACCT_SMR TTAS
					  WHERE   USER_SEQ = #{USER_SEQ}
					  AND     ACT_DATE <![CDATA[ < ]]> DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 1 DAY), '%Y-%m-%d %H:%i:%s')
					  GROUP BY USER_SEQ
					
					UNION ALL 
					
					  SELECT  TTAS.USER_SEQ,
							  DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m') AS SAL_DATE,	
					          SUM(TTAS.DEPOSIT_TOTAL) - SUM(TTAS.WITHDRL_TOTAL) AS ASSET
					   FROM   TB_TRAN_ACCT_SMR TTAS
					  WHERE   USER_SEQ = #{USER_SEQ}
					   AND    ACT_DATE <![CDATA[ < ]]>  DATE_FORMAT(DATE_ADD(LAST_DAY(DATE_SUB(NOW(), INTERVAL 1 MONTH)), INTERVAL 1 DAY), '%Y-%m-%d %H:%i:%s')
					  GROUP BY USER_SEQ
					
					UNION ALL 
						
						SELECT  TTAS.USER_SEQ,
								DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 2 MONTH), '%Y-%m') AS SAL_DATE,	
						        SUM(TTAS.DEPOSIT_TOTAL) - SUM(TTAS.WITHDRL_TOTAL) AS ASSET
						FROM    TB_TRAN_ACCT_SMR TTAS
						WHERE   USER_SEQ = #{USER_SEQ}
						AND     ACT_DATE <![CDATA[ < ]]>  DATE_FORMAT(DATE_ADD(LAST_DAY(DATE_SUB(NOW(), INTERVAL 2 MONTH)), INTERVAL 1 DAY), '%Y-%m-%d %H:%i:%s')
						GROUP BY USER_SEQ
					
					UNION ALL 
						
						SELECT  TTAS.USER_SEQ,
								DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 3 MONTH), '%Y-%m') AS SAL_DATE,	
						        SUM(TTAS.DEPOSIT_TOTAL) - SUM(TTAS.WITHDRL_TOTAL) AS ASSET
						FROM    TB_TRAN_ACCT_SMR TTAS
						WHERE   USER_SEQ = #{USER_SEQ}
						AND     ACT_DATE <![CDATA[ < ]]>  DATE_FORMAT(DATE_ADD(LAST_DAY(DATE_SUB(NOW(), INTERVAL 3 MONTH)), INTERVAL 1 DAY), '%Y-%m-%d %H:%i:%s')
						GROUP BY USER_SEQ
					
					UNION ALL 
						
						SELECT  TTAS.USER_SEQ,
								DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 4 MONTH), '%Y-%m') AS SAL_DATE,	
						        SUM(TTAS.DEPOSIT_TOTAL) - SUM(TTAS.WITHDRL_TOTAL) AS ASSET
						FROM    TB_TRAN_ACCT_SMR TTAS
						WHERE   USER_SEQ = #{USER_SEQ}
						AND     ACT_DATE <![CDATA[ < ]]>  DATE_FORMAT(DATE_ADD(LAST_DAY(DATE_SUB(NOW(), INTERVAL 4 MONTH)), INTERVAL 1 DAY), '%Y-%m-%d %H:%i:%s')
						GROUP BY USER_SEQ
			  ) X
	
	     ORDER BY X.SAL_DATE ASC
	
	</select>
	
	
	<select id="getAssetConsistList" parameterType="java.util.HashMap"  resultType="java.util.HashMap">
	
				SELECT  RNUM,
						ACCOUNT_NM,
		        		ASSET
		 	     
		 	     FROM (
						SELECT  ROW_NUMBER() OVER (ORDER BY Y.ASSET DESC) AS RNUM,
						        Y.ACCOUNT_NM,
						        Y.ASSET
	
						 FROM (
									SELECT (SELECT ACCOUNT_NM
											  FROM TB_META_ACCOUNT TMA
											 WHERE X.USER_SEQ   = #{USER_SEQ}
										      AND  X.ACCOUNT_CD = TMA.ACCOUNT_CD
											 ) AS ACCOUNT_NM,
									        SUM(DEPOSIT_TOTAL) - SUM(WITHDRL_TOTAL) AS ASSET
										
									  FROM (
											 SELECT  USER_SEQ,
											         ACCOUNT_CD,
											         CONCAT(YEAR(ACT_DATE), '-', LPAD(MONTH(ACT_DATE),2,0)) AS ACT_DATE,
											         DEPOSIT_TOTAL,
											         WITHDRL_TOTAL
												FROM TB_TRAN_ACCT_SMR
												WHERE USER_SEQ = #{USER_SEQ}
									       
									       ) X
									
									GROUP BY ACCOUNT_CD
						
							) Y
						
						) Z
		
			WHERE Z.RNUM <![CDATA[ <= ]]> 3
				
		UNION ALL
		
				SELECT    7 AS RNUM,
						  '기타' AS ACCOUNT_NM,
				 	      (SELECT SUM(C.ASSET)
			                 FROM (
			                 		SELECT  ROW_NUMBER() OVER (ORDER BY B.ASSET DESC) AS RNUM,
								            B.ACCOUNT_NM,
								            B.ASSET
								      FROM (SELECT (SELECT ACCOUNT_NM
											         FROM  TB_META_ACCOUNT TMA
											        WHERE  A.USER_SEQ   = #{USER_SEQ}
												      AND  A.ACCOUNT_CD = TMA.ACCOUNT_CD
											        ) AS ACCOUNT_NM,
									                SUM(DEPOSIT_TOTAL) - SUM(WITHDRL_TOTAL) AS ASSET
										    
										     FROM (SELECT   USER_SEQ,
													        ACCOUNT_CD,
													        CONCAT(YEAR(ACT_DATE), '-', LPAD(MONTH(ACT_DATE),2,0)) AS ACT_DATE,
													        DEPOSIT_TOTAL,
													        WITHDRL_TOTAL
													 FROM   TB_TRAN_ACCT_SMR
												     WHERE  USER_SEQ = #{USER_SEQ}
									             ) A
									   		
									   		GROUP BY ACCOUNT_CD
						             	   ) B
								) C
							   WHERE C.RNUM <![CDATA[ >]]> 3 
						) AS ASSET
						
						FROM DUAL
						
		ORDER BY RNUM ASC
	
	</select>


</mapper>