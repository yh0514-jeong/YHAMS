<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yhams.asset.AssetMapper">

	<sql id="cmmAccountWhere">
		AND   TMP.USER_SEQ = #{USER_SEQ}
		AND   TMP.USE_YN   = 'Y'
		
		<if test="ACCOUNT_NM != null and ACCOUNT_NM != ''">
			AND   TMP.ACCOUNT_NM LIKE CONCAT('%',#{ACCOUNT_NM},'%')
		</if>
		
		<if test="ACCOUNT_CTG_NM != null and ACCOUNT_CTG_NM != ''">
			AND   TMP.ACCOUNT_CTG_NM LIKE CONCAT('%',#{ACCOUNT_CTG_NM},'%')
		</if>
		
		<if test="ISUE_AGY_NM != null and ISUE_AGY_NM != ''">
			AND   TMP.ISUE_AGY_NM LIKE CONCAT('%',#{ISUE_AGY_NM},'%')
		</if>
	</sql>
	
	
	<sql id="yearlyAssetPlanWhere">
	
		 <if test="START_YEAR != null and START_YEAR != ''">
		   	  AND T1.STD_YEAR  <![CDATA[ >= ]]> #{START_YEAR}
		  </if> 
		   
		  <if test="END_YEAR != null and END_YEAR != ''">
		   	  AND T1.STD_YEAR <![CDATA[ <= ]]> #{END_YEAR}
		  </if> 
	
	</sql>
	
	
	<sql id="cmmUnearnedWhere">
			AND   A.USER_SEQ = #{USER_SEQ}
			
			<if test="START_DATE != null and START_DATE != ''">
			AND   A.UED_DATE   <![CDATA[ >= ]]> STR_TO_DATE(#{START_DATE},'%Y-%m-%d')
		    </if>
		    
		    <if test="END_DATE != null and END_DATE != ''">
		    AND   A.UED_DATE   <![CDATA[ <= ]]> STR_TO_DATE(#{END_DATE},'%Y-%m-%d')
		    </if>
		    
		    <if test="UED_SOURCE != null and UED_SOURCE != ''">
		    AND   A.UED_SOURCE LIKE CONCAT('%', #{UED_SOURCE}, '%')
		    </if>
		    
		    <if test="UED_CTG_NM != null and UED_CTG_NM != ''">
		    AND   A.UED_CTG_NM LIKE CONCAT('%', #{UED_CTG_NM}, '%')
		    </if>
	</sql>
	
	
	<sql id="cmmSalaryWhere">
			AND   T1.USER_SEQ = #{USER_SEQ}
	</sql>
	 
	 

	<select id="accountCount" parameterType="java.util.HashMap" resultType="long">
	
		SELECT COUNT(*)
	   
	    FROM (
				SELECT TMP.*
	             
	             FROM (	SELECT   TMA.ACCOUNT_CD,
						         TMA.USER_SEQ,
						         TMA.ACCOUNT_NM,
						         TMA.ACCOUNT_CTG,
						         (SELECT CODE_NM 
						            FROM TB_CMM_CDDTL TCC1
						           WHERE TCC1.CODE_ID    = 'CG_0005'
								   AND   TMA.ACCOUNT_CTG = TCC1.CODE_CD
								 ) AS ACCOUNT_CTG_NM,
						         TMA.ISUE_AGY,
						         (SELECT CODE_NM 
						            FROM TB_CMM_CDDTL TCC2
						           WHERE TCC2.CODE_ID = 'CG_0006'
								   AND   TMA.ISUE_AGY = TCC2.CODE_CD
								 ) AS ISUE_AGY_NM,
								 TMA.ACCOUNT_HRDR,
						         TMA.USE_YN,
						         TMA.CREATE_ID,
						         TMA.CREATE_DATE,
						         TMA.UPDATE_ID,
						         TMA.UPDATE_DATE
						             
							FROM  TB_META_ACCOUNT TMA ) TMP
							
						    WHERE 1=1
					
					<include refid="cmmAccountWhere"/>
			 
			 ) T1
	
	</select>
	
	<select id="accountListUp" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	
		SELECT  T1.RNUM,
		        T1.ACCOUNT_CD,
		        T1.USER_SEQ,
		        T1.ACCOUNT_NM,
		        T1.ACCOUNT_CTG,
		        T1.ACCOUNT_CTG_NM,
		        T1.ISUE_AGY,
		        T1.ISUE_AGY_NM,
		        T1.ACCOUNT_HRDR,
		        T1.USE_YN,
		        T1.CREATE_ID,
		        DATE_FORMAT(T1.CREATE_DATE, '%Y-%m-%d %H:%i:%s') AS CREATE_DATE,
		        T1.UPDATE_ID,
		        DATE_FORMAT(T1.UPDATE_DATE, '%Y-%m-%d %H:%i:%s') AS UPDATE_DATE
	   
	    FROM (
				SELECT ROW_NUMBER() OVER(ORDER BY TMP.ACCOUNT_CD DESC) AS RNUM,
					   TMP.*
	             
	             FROM (	SELECT   TMA.ACCOUNT_CD,
						         TMA.USER_SEQ,
						         TMA.ACCOUNT_NM,
						         TMA.ACCOUNT_CTG,
						         (SELECT CODE_NM 
						            FROM TB_CMM_CDDTL TCC1
						           WHERE TCC1.CODE_ID    = 'CG_0005'
								   AND   TMA.ACCOUNT_CTG = TCC1.CODE_CD
								 ) AS ACCOUNT_CTG_NM,
						         TMA.ISUE_AGY,
						         (SELECT CODE_NM 
						            FROM TB_CMM_CDDTL TCC2
						           WHERE TCC2.CODE_ID = 'CG_0006'
								   AND   TMA.ISUE_AGY = TCC2.CODE_CD
								 ) AS ISUE_AGY_NM,
								 TMA.ACCOUNT_HRDR,
						         TMA.USE_YN,
						         TMA.CREATE_ID,
						         TMA.CREATE_DATE,
						         TMA.UPDATE_ID,
						         TMA.UPDATE_DATE
						             
							FROM  TB_META_ACCOUNT TMA ) TMP
							
							WHERE 1=1
					
					<include refid="cmmAccountWhere"/>
			 
			 ) T1
			 
	    WHERE T1.RNUM BETWEEN ((#{cntPerPage} * (#{curPage}-1)) + 1) AND (#{cntPerPage} * #{curPage})
	
		ORDER BY RNUM ASC
	
	</select>


	<select id="selectAccount" parameterType="String" resultType="java.util.HashMap">
	
		 SELECT  	TMA.ACCOUNT_CD,
			        TMA.USER_SEQ,
			        TMA.ACCOUNT_NM,
			        TMA.ACCOUNT_CTG,
			        TMA.ISUE_AGY,
			        TMA.ACCOUNT_HRDR,
			        TMA.USE_YN,
			        TMA.CREATE_ID,
			        TMA.CREATE_DATE,
			        TMA.UPDATE_ID,
			        TMA.UPDATE_DATE
			  FROM  TB_META_ACCOUNT TMA
			  
			 WHERE  TMA.ACCOUNT_CD = #{ACCOUNT_CD}
	
	 </select>
	 
	 <insert id="insertAccount" parameterType="java.util.HashMap">
	 
	 	INSERT INTO TB_META_ACCOUNT
		(
		
		ACCOUNT_CD,
		USER_SEQ,
		ACCOUNT_CTG,
		ACCOUNT_NM,
		ISUE_AGY,
		ACCOUNT_HRDR,
		USE_YN,
		CREATE_ID,
		CREATE_DATE,
		UPDATE_ID,
		UPDATE_DATE
		
		) VALUES (
		
		#{ACCOUNT_CD},
		#{USER_SEQ},
		#{ACCOUNT_CTG},
		#{ACCOUNT_NM},
		#{ISUE_AGY},
		#{ACCOUNT_HRDR},
		'Y',
		#{CREATE_ID},
		NOW(),
		#{UPDATE_ID},
		NOW()
		
		)
	 
	 
	 </insert>
	 
	 <update id="updateAccount" parameterType="java.util.HashMap">
	 	
	 	UPDATE TB_META_ACCOUNT
			
			SET ACCOUNT_NM   = #{ACCOUNT_NM},
			    ACCOUNT_CTG  = #{ACCOUNT_CTG},
			    ISUE_AGY     = #{ISUE_AGY},
			    ACCOUNT_HRDR = #{ACCOUNT_HRDR},
			    UPDATE_ID    = #{UPDATE_ID},
			    UPDATE_DATE  = NOW()
		  
		  WHERE ACCOUNT_CD   = #{ACCOUNT_CD}
	 	
	 </update>
	 
	 
	 <update id="deleteAccount" parameterType="java.util.HashMap">
	 	
	 	UPDATE TB_META_ACCOUNT

			SET USE_YN       = 'N',
			    UPDATE_ID    = #{UPDATE_ID},
			    UPDATE_DATE  = NOW()

		  WHERE ACCOUNT_CD   = #{ACCOUNT_CD}
	 
	 </update>
	 
	 
	 <select id="unearnedCount" parameterType="java.util.HashMap" resultType="long">
	 
	 	SELECT  COUNT(*)
	  
	     FROM (
	         
		         SELECT  A.*
			       
			       FROM (
			       	     
			       	     SELECT  TTU.UED_SEQ,
							     TTU.USER_SEQ,
							     TTU.UED_DATE,
							     TTU.UED_INCM,
							     TTU.UED_SOURCE,
							     TTU.UED_CTG,
							     (SELECT TCC.CODE_NM
						           FROM TB_CMM_CDDTL TCC
							       WHERE TCC.CODE_ID = 'CG_1005'
									 AND   TTU.UED_CTG = TCC.CODE_CD
								  ) AS UED_CTG_NM,
							     TTU.CREATE_ID,
							     TTU.CREATE_DATE,
							     TTU.UPDATE_ID,
							     TTU.UPDATE_DATE
					        
						     FROM TB_TRAN_UNEARNED TTU 
						     
						  )  A
						     
						 WHERE 1=1
						 
						 <include refid="cmmUnearnedWhere"/>
	     
		  	  ) T1
	 
	 </select>
	 
	 <select id="unearnedListUp" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 	
	 	SELECT  T1.RNUM,
                T1.UED_SEQ,
		        T1.USER_SEQ,
                DATE_FORMAT(T1.UED_DATE, '%Y-%m-%d') AS UED_DATE,
                FORMAT(T1.UED_INCM, 0) AS UED_INCM,
                T1.UED_SOURCE,
                T1.UED_CTG,
                T1.UED_CTG_NM,
                T1.CREATE_ID,
                T1.CREATE_DATE,
                T1.UPDATE_ID,
                T1.UPDATE_DATE
	  
	     FROM (
	         
		         SELECT  A.*
			       
			       FROM (
			       	     
			       	     SELECT  ROW_NUMBER() OVER(ORDER BY DATE_FORMAT(TTU.UED_DATE, '%Y-%m-%d') ASC) AS RNUM,
					             TTU.UED_SEQ,
							     TTU.USER_SEQ,
							     TTU.UED_DATE,
							     TTU.UED_INCM,
							     TTU.UED_SOURCE,
							     TTU.UED_CTG,
							     (SELECT TCC.CODE_NM
						           FROM TB_CMM_CDDTL TCC
							       WHERE TCC.CODE_ID = 'CG_1005'
									 AND   TTU.UED_CTG = TCC.CODE_CD
								  ) AS UED_CTG_NM,
							     TTU.CREATE_ID,
							     TTU.CREATE_DATE,
							     TTU.UPDATE_ID,
							     TTU.UPDATE_DATE
					        
						     FROM TB_TRAN_UNEARNED TTU 
						     
						  )  A
						     
						 WHERE 1=1
						 
						 <include refid="cmmUnearnedWhere"/>
	     
		  	  ) T1
		  	  
		  	  
		  	 WHERE T1.RNUM BETWEEN ((#{cntPerPage} * (#{curPage}-1)) + 1) AND (#{cntPerPage} * #{curPage})
	
		     ORDER BY RNUM ASC
		  	
	 </select>
	 
	 
	 
	 <insert id="saveUnearned" parameterType="java.util.HashMap">
	 
	 	INSERT INTO TB_TRAN_UNEARNED(
		
			UED_SEQ,
			USER_SEQ,
			UED_DATE,
			UED_INCM,
			UED_SOURCE,
			UED_CTG,
			CREATE_ID,
			CREATE_DATE,
			UPDATE_ID,
			UPDATE_DATE
		
		
		) VALUES (
		
			#{UED_SEQ},
			#{USER_SEQ},
			#{UED_DATE},
			#{UED_INCM},
			#{UED_SOURCE},
			#{UED_CTG},
			#{CREATE_ID},
			NOW(),
			#{UPDATE_ID},
			NOW()
		
		)
	 
	 </insert>
	 
	 <select id="selectUnearned" parameterType="String" resultType="java.util.HashMap">
	 
	 		SELECT  UED_SEQ,   
				    USER_SEQ,     
					DATE_FORMAT(UED_DATE, '%Y-%m-%d') AS UED_DATE,      
					FORMAT(UED_INCM, 0) AS UED_INCM,    
					UED_SOURCE,   
					UED_CTG,      
					CREATE_ID,    
					CREATE_DATE,  
					UPDATE_ID,    
					UPDATE_DATE
					 	
			   FROM TB_TRAN_UNEARNED
			   
			   WHERE UED_SEQ = #{UED_SEQ}
	 
	 </select>
	
		
	 <update id="updateUnearned" parameterType="java.util.HashMap">
	 
	 	 UPDATE TB_TRAN_UNEARNED
	 	 
			SET UED_DATE   = #{UED_DATE},
			    UED_INCM   = #{UED_INCM},
			    UED_SOURCE = #{UED_SOURCE},
			    UED_CTG    = #{UED_CTG}
			
			WHERE UED_SEQ  = #{UED_SEQ}
	 
	 </update>
	
	 <delete id="deleteUnearedList" parameterType="java.util.HashMap">
	 
	 	DELETE FROM	TB_TRAN_UNEARNED
	 	WHERE UED_SEQ IN 
	 	<foreach collection="uedSeqs" item="item" separator="," open="(" close=")">
            #{item}
    	</foreach>
    	
	 </delete>
	 
	 
	 <delete id="deleteSalSeq" parameterType="java.util.HashMap">
	 
	 	DELETE FROM TB_TRAN_SALARY
		WHERE  SAL_SEQ = #{SAL_SEQ}
		
	 </delete>
	 
	 
	 <insert id="saveSalaryList" parameterType="java.util.HashMap">
	 	
	 	INSERT INTO TB_TRAN_SALARY (
		
			SAL_SEQ,
			SAL_DTL_SEQ,
			USER_SEQ,
			SAL_DATE,
			AMOUNT,
			PAY_DEDUC,
			PAY_DEDUC_DTL,
			CREATE_ID,
			CREATE_DATE,
			UPDATE_ID,
			UPDATE_DATE
		
		
		) VALUES (
		
			#{SAL_SEQ},
			#{SAL_DTL_SEQ},
			#{USER_SEQ},
			#{SAL_DATE},
			#{AMOUNT},
			#{PAY_DEDUC},
			#{PAY_DEDUC_DTL},
			#{CREATE_ID},
			NOW(),
			#{UPDATE_ID},
			NOW()
				
		)
	 	
	 </insert>
	 
	 <select id="salaryCount" parameterType="java.util.HashMap" resultType="long">
	 
	 	SELECT  COUNT(*)
  
        FROM (
			    SELECT  T1.SAL_SEQ, 
				        T1.USER_SEQ,
				        T1.SAL_DATE,
				        T2.PAY_AMOUNT, 
					    T3.DED_AMOUNT, 
					    T2.PAY_AMOUNT-T3.DED_AMOUNT AS NET_AMOUNT
					  
				FROM (SELECT DISTINCT SAL_SEQ, 
				                      USER_SEQ, 
									  SAL_DATE
						  FROM TB_TRAN_SALARY)  T1
				
				LEFT OUTER JOIN
				(SELECT  SAL_SEQ,
				         SUM(AMOUNT) AS PAY_AMOUNT
					FROM TB_TRAN_SALARY
				  WHERE  PAY_DEDUC = 'PAY'
				  GROUP BY SAL_SEQ) T2
				ON T1.SAL_SEQ = T2.SAL_SEQ
				
				LEFT OUTER JOIN
				(SELECT  SAL_SEQ,
				         SUM(AMOUNT) AS DED_AMOUNT
				   FROM TB_TRAN_SALARY
				  WHERE PAY_DEDUC = 'DED'
				  GROUP BY SAL_SEQ) T3
				 ON T1.SAL_SEQ = T2.SAL_SEQ
				 
				 <include refid="cmmSalaryWhere"/> 
	 
	 		 ) X
	 
	 </select>
	 
	 
	 
	 <select id="salaryListUp" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 
	 	SELECT  X.RNUM,
		        X.SAL_SEQ,
		        X.USER_SEQ,
		        X.SAL_DATE,
		        FORMAT(X.PAY_AMOUNT, 0) AS PAY_AMOUNT,
		        FORMAT(X.DED_AMOUNT, 0) AS DED_AMOUNT,
		        FORMAT(X.NET_AMOUNT, 0) AS NET_AMOUNT
  
        FROM (
			    SELECT  ROW_NUMBER() OVER (ORDER BY T1.SAL_DATE DESC) AS RNUM,
				        T1.SAL_SEQ, 
				        T1.USER_SEQ,
				        T1.SAL_DATE,
				        IFNULL(T2.PAY_AMOUNT,0) PAY_AMOUNT, 
					    IFNULL(T3.DED_AMOUNT,0) DED_AMOUNT,
					    IFNULL(T2.PAY_AMOUNT,0)-IFNULL(T3.DED_AMOUNT,0) AS NET_AMOUNT
					  
				FROM (SELECT DISTINCT SAL_SEQ, 
				                      USER_SEQ, 
									  SAL_DATE
						  FROM TB_TRAN_SALARY)  T1
				
				LEFT OUTER JOIN
				(SELECT  SAL_SEQ,
				         IFNULL(SUM(AMOUNT),0) AS PAY_AMOUNT
					FROM TB_TRAN_SALARY
				  WHERE  PAY_DEDUC = 'PAY'
				  GROUP BY SAL_SEQ) T2
				ON T1.SAL_SEQ = T2.SAL_SEQ
				
				LEFT OUTER JOIN
				(SELECT  SAL_SEQ,
				         IFNULL(SUM(AMOUNT),0) AS DED_AMOUNT
				   FROM TB_TRAN_SALARY
				  WHERE PAY_DEDUC = 'DED'
				  GROUP BY SAL_SEQ) T3
				 ON T1.SAL_SEQ = T3.SAL_SEQ
				 
				 <include refid="cmmSalaryWhere"/>
	 
	 		 ) X
	 		 
	 		 WHERE X.RNUM BETWEEN ((#{cntPerPage} * (#{curPage}-1)) + 1) AND (#{cntPerPage} * #{curPage})
	
		     ORDER BY X.RNUM ASC
	 
	 </select>
	 
	 
	 <select id="getPayDedList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 
	 	SELECT   PAY_DEDUC_DTL,
		         AMOUNT
		   FROM  TB_TRAN_SALARY
		   WHERE SAL_SEQ   = #{SAL_SEQ}
		   AND   PAY_DEDUC = #{PAY_DEDUC}
		  
		ORDER BY SAL_DTL_SEQ ASC

	 </select>
	 
	 
	 <select id="getSalSeqDate" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 
	 	SELECT  DISTINCT SAL_SEQ, SAL_DATE
	      FROM  TB_TRAN_SALARY
	      WHERE SAL_SEQ  = #{SAL_SEQ}
	 
	 </select>
	 
	 
	 <select id="getLastSalary" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 
	 	 SELECT  SAL_DATE,
                 FORMAT(AMOUNT, 0) AMOUNT,
                 PAY_DEDUC,
                 PAY_DEDUC_DTL
	       
	       FROM  TB_TRAN_SALARY
	      
	      WHERE  SAL_SEQ IN (SELECT  DISTINCT MAX(SAL_SEQ) OVER (ORDER BY SAL_DATE DESC) AS SAL_SEQ
						      FROM  TB_TRAN_SALARY
						      WHERE USER_SEQ = #{USER_SEQ}
						    )
		ORDER BY SAL_DTL_SEQ ASC
	 
	 </select>
	 
	 <select id="dupChkSalMonth" parameterType="java.util.HashMap" resultType="int">
	 	
	 	SELECT  COUNT(*)
		FROM TB_TRAN_SALARY
		WHERE   USER_SEQ = #{USER_SEQ}
		AND     SAL_DATE = #{SAL_DATE}
	 
	 </select>
	 
	 
	 <select id="chkYearlyAssetPlanExist" parameterType="java.util.HashMap" resultType="String">
	 
	 	SELECT CASE WHEN COUNT(*) > 0 THEN 'TRUE'
			        ELSE 'FALSE'
			        END AS RESULT
	     FROM TB_TRAN_YEARLY_ASSET_PLAN
	    WHERE STD_YEAR = #{STD_YEAR}
	      AND USER_SEQ = #{USER_SEQ}
	 
	 </select>
	 
	 <select id="userYearlyPlanTemplate" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 
		SELECT  CASE WHEN USER_DEF_SEQ IS NOT NULL AND RNUM = 1 THEN 'HEAD'
		        ELSE NULL END AS IS_HEAD,
				CASE WHEN USER_DEF_SEQ IS NULL THEN 'TOTAL'
		        ELSE NULL END AS IS_TOTAL,
				CASE WHEN X.USER_DEF_SEQ IS NULL THEN CONCAT(X.MAIN_CTG, '_SUM')
				ELSE X.USER_DEF_SEQ
				END AS USER_DEF_SEQ,
				CASE WHEN X.USER_DEF_SEQ IS NULL THEN CONCAT(X.MAIN_CTG_NM, ' 계')
				ELSE X.SUB_CTG_NM
				END AS SUB_CTG_NM,		 
		        X.MAIN_CTG AS MAIN_CTG,
		        X.MAIN_CTG_NM AS MAIN_CTG_NM,
		        X.CODE_ORDR AS CODE_ORDR,
		        X.RNUM AS RNUM,
				X.MONTH_1 AS MONTH_1,
			    X.MONTH_2 AS MONTH_2,
				X.MONTH_3 AS MONTH_3,
				X.MONTH_4 AS MONTH_4,
				X.MONTH_5 AS MONTH_5,
				X.MONTH_6 AS MONTH_6,
				X.MONTH_7 AS MONTH_7,
				X.MONTH_8 AS MONTH_8,
				X.MONTH_9 AS MONTH_9,
				X.MONTH_10 AS MONTH_10,
				X.MONTH_11 AS MONTH_11,
				X.MONTH_12 AS MONTH_12,
				CASE WHEN IFNULL(X.MONTH_1, 0) +  IFNULL(X.MONTH_2, 0) + IFNULL(X.MONTH_3, 0) + IFNULL(X.MONTH_4, 0) +  
		 				  IFNULL(X.MONTH_5, 0) +  IFNULL(X.MONTH_6, 0) + IFNULL(X.MONTH_7, 0) + IFNULL(X.MONTH_8, 0) + 
		  				  IFNULL(X.MONTH_9, 0) +  IFNULL(X.MONTH_10, 0) + IFNULL(X.MONTH_11, 0) + IFNULL(X.MONTH_12, 0) = 0 THEN NULL 
		 			 ELSE 
						  IFNULL(X.MONTH_1, 0) +  IFNULL(X.MONTH_2, 0) + IFNULL(X.MONTH_3, 0) + IFNULL(X.MONTH_4, 0) +  
						  IFNULL(X.MONTH_5, 0) +  IFNULL(X.MONTH_6, 0) + IFNULL(X.MONTH_7, 0) + IFNULL(X.MONTH_8, 0) + 
						  IFNULL(X.MONTH_9, 0) +  IFNULL(X.MONTH_10, 0) + IFNULL(X.MONTH_11, 0) + IFNULL(X.MONTH_12, 0)
		  			END AS TOTAL
        FROM (

					SELECT      T1.USER_DEF_SEQ,
						        T1.MAIN_CTG,
						        (SELECT  TCC.CODE_NM
						           FROM  TB_CMM_CDDTL TCC
						           WHERE T1.MAIN_CTG = TCC.CODE_CD
						            AND  TCC.CODE_ID = 'CG_2005'
								  ) AS MAIN_CTG_NM,
						        T1.CODE_ORDR,
						        T1.RNUM,
						        T1.SUB_CTG_NM,
								SUM(MONTH_1) AS MONTH_1,
						        SUM(MONTH_2) AS MONTH_2,
						        SUM(MONTH_3) AS MONTH_3,
						        SUM(MONTH_4) AS MONTH_4,
						        SUM(MONTH_5) AS MONTH_5,
						        SUM(MONTH_6) AS MONTH_6,
						        SUM(MONTH_7) AS MONTH_7,
						        SUM(MONTH_8) AS MONTH_8,
						        SUM(MONTH_9) AS MONTH_9,
					            SUM(MONTH_10) AS MONTH_10,
					            SUM(MONTH_11) AS MONTH_11,
					            SUM(MONTH_12) AS MONTH_12
						        
						FROM (
					
									SELECT    ROW_NUMBER() OVER (PARTITION BY TMUDIC.MAIN_CTG ORDER BY CODE_ORDR ASC) AS RNUM,
											  TMUDIC.USER_DEF_SEQ,
											  TMUDIC.USER_SEQ,
											  TMUDIC.MAIN_CTG,
											  TMUDIC.SUB_CTG_NM,
											  TMUDIC.USE_YN,
											  TMUDIC.CODE_ORDR,
									          (SELECT TTYAP.AMOUNT
									             FROM TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									            WHERE TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									             AND  TMUDIC.USER_DEF_SEQ  = TTYAP.SUB_CTG
									             AND  TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									             AND  CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0)) = CONCAT(#{STD_YEAR}, '-01')
											  ) AS 'MONTH_1',
											  (SELECT TTYAP.AMOUNT
									           FROM   TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									           WHERE  TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									           AND    TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									           AND    TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									           AND    CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0))  = CONCAT(#{STD_YEAR}, '-02')
											   ) AS 'MONTH_2',
											  (SELECT TTYAP.AMOUNT
									            FROM  TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									            WHERE TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									             AND  TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									             AND  TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									             AND  CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0))  = CONCAT(#{STD_YEAR}, '-03')
											   ) AS 'MONTH_3',
											  (SELECT TTYAP.AMOUNT
									             FROM TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									            WHERE TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									             AND  TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									             AND  TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									             AND  CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0)) = CONCAT(#{STD_YEAR}, '-04')
											  ) AS 'MONTH_4',
											  (SELECT TTYAP.AMOUNT
									             FROM TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									            WHERE TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									             AND  TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									              AND TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									             AND  CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0)) = CONCAT(#{STD_YEAR}, '-05')
											   ) AS 'MONTH_5',
											  (SELECT TTYAP.AMOUNT
									           FROM   TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									           WHERE  TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									            AND   TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									            AND   TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									            AND   CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0)) = CONCAT(#{STD_YEAR}, '-06')
											   ) AS 'MONTH_6',
											   (SELECT TTYAP.AMOUNT
									             FROM TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									            WHERE TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									             AND  TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									             AND TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									             AND  CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0)) = CONCAT(#{STD_YEAR}, '-07')
											   ) AS 'MONTH_7',
											   (SELECT TTYAP.AMOUNT
									           FROM TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									          WHERE TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									           AND  TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									           AND  TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									           AND  CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0)) = CONCAT(#{STD_YEAR}, '-08')
											  ) AS 'MONTH_8',
											   (SELECT TTYAP.AMOUNT
									           FROM TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									          WHERE TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									           AND  TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									           AND TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									           AND  CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0)) = CONCAT(#{STD_YEAR}, '-09')
											  ) AS 'MONTH_9',
											  (SELECT TTYAP.AMOUNT
									           FROM TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									          WHERE TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									           AND  TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									           AND TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									           AND  CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0)) = CONCAT(#{STD_YEAR}, '-10')
											  ) AS 'MONTH_10',
											  (SELECT TTYAP.AMOUNT
									           FROM TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									          WHERE TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									           AND  TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									           AND  TMUDIC.USER_SEQ = TTYAP.USER_SEQ
									           AND  CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0)) = CONCAT(#{STD_YEAR}, '-11')
											  ) AS 'MONTH_11',
											  (SELECT TTYAP.AMOUNT
									           FROM TB_TRAN_YEARLY_ASSET_PLAN TTYAP
									          WHERE TMUDIC.MAIN_CTG = TTYAP.MAIN_CTG
									           AND  TMUDIC.USER_DEF_SEQ = TTYAP.SUB_CTG
									           AND  TMUDIC.USER_SEQ  = TTYAP.USER_SEQ
									           AND  CONCAT(TTYAP.STD_YEAR, "-", LPAD(TTYAP.STD_MONTH,2,0)) = CONCAT(#{STD_YEAR}, '-12')
											  ) AS 'MONTH_12'
											  				  
										FROM TB_META_USER_DEF_ICMEXP_CATEGORY TMUDIC
										
										WHERE USE_YN   = 'Y'
										AND   USER_SEQ = #{USER_SEQ}
										
										ORDER BY CODE_ORDR ASC
							
							) T1
							
							
							GROUP BY  T1.MAIN_CTG, T1.USER_DEF_SEQ WITH ROLLUP 
							
				 ) X
							
				
				WHERE MAIN_CTG IS NOT NULL
							
				ORDER BY MAIN_CTG, IS_TOTAL, CODE_ORDR ASC
	 
	 </select>
	 
	 
	 <insert id="saveYearlyAssetPlanList" parameterType="java.util.HashMap">
	 
	 	
	 	INSERT INTO TB_TRAN_YEARLY_ASSET_PLAN (
		
			ASSET_PLAN_SEQ,
			USER_SEQ,
			STD_YEAR,
			STD_MONTH,
			MAIN_CTG,
			SUB_CTG,
			AMOUNT,
			CREATE_ID,
			CREATE_DATE,
			UPDATE_ID,
			UPDATE_DATE
		
		) VALUES (
		
			#{ASSET_PLAN_SEQ},
			#{USER_SEQ},
			#{STD_YEAR},
			#{STD_MONTH},
			#{MAIN_CTG},
			#{SUB_CTG},
			#{AMOUNT},
			#{CREATE_ID},
			NOW(),
			#{UPDATE_ID},
			NOW()
		
		)
	 
	 </insert>
	 
	 
	 <delete id="deleteYearlyAssetPlanList" parameterType="java.util.HashMap">
	 
	 		DELETE FROM TB_TRAN_YEARLY_ASSET_PLAN
			WHERE  USER_SEQ = #{USER_SEQ}
			AND    STD_YEAR = #{STD_YEAR}
	 
	 </delete>
	 
	 <select id="yearlyAssetPlanList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 
	 	SELECT  X.RNUM,
			    X.STD_YEAR,
		        FORMAT(IFNULL(X.DW_CAT1_01_AMOUNT, 0), 0) AS DW_CAT1_01_AMOUNT,
		        FORMAT(IFNULL(X.DW_CAT1_02_AMOUNT, 0), 0) AS DW_CAT1_02_AMOUNT,
			    FORMAT(IFNULL(X.DW_CAT1_01_AMOUNT, 0) -  IFNULL(X.DW_CAT1_02_AMOUNT, 0), 0) AS NET_AMOUNT
		 
	   FROM (
				SELECT   ROW_NUMBER() OVER (ORDER BY T1.STD_YEAR DESC) AS RNUM,
						 T1.STD_YEAR,
				         T2.AMOUNT AS DW_CAT1_01_AMOUNT,
				         T3.AMOUNT AS DW_CAT1_02_AMOUNT
					FROM (SELECT DISTINCT STD_YEAR 
							FROM TB_TRAN_YEARLY_ASSET_PLAN
						  ) T1
							
						  LEFT OUTER JOIN
						  (SELECT  USER_SEQ,
								   STD_YEAR,
							       MAIN_CTG,
							       SUM(AMOUNT) AS AMOUNT
							 FROM  TB_TRAN_YEARLY_ASSET_PLAN
							WHERE  USER_SEQ = #{USER_SEQ}
							 AND   MAIN_CTG = 'DW_CAT1_01'
							GROUP BY USER_SEQ, STD_YEAR, MAIN_CTG			
						   ) T2
	     				   ON T1.STD_YEAR = T2.STD_YEAR
							
						  LEFT OUTER JOIN
						  (SELECT  USER_SEQ,
								   STD_YEAR,
							       MAIN_CTG,
							       SUM(AMOUNT) AS AMOUNT
							 FROM  TB_TRAN_YEARLY_ASSET_PLAN
							WHERE  USER_SEQ = #{USER_SEQ}
						     AND   MAIN_CTG = 'DW_CAT1_02'
							GROUP BY USER_SEQ, STD_YEAR, MAIN_CTG			
						   ) T3
							
						   ON T1.STD_YEAR = T3.STD_YEAR
							
						   WHERE 1=1
						   
						   <include refid="yearlyAssetPlanWhere"/>
							 
			) X
			
			WHERE X.RNUM BETWEEN ((#{cntPerPage} * (#{curPage}-1)) + 1) AND (#{cntPerPage} * #{curPage})
	
		    ORDER BY X.RNUM ASC
	 
	 </select>
	 
	 
	 <select id="yearlyAssetPlanListCount" parameterType="java.util.HashMap" resultType="long">
	 
	 	SELECT  COUNT(*)
		 
	     FROM (
				SELECT   T1.STD_YEAR,
				         T2.AMOUNT AS DW_CAT1_01_AMOUNT,
				         T3.AMOUNT AS DW_CAT1_02_AMOUNT
				  FROM   (SELECT DISTINCT STD_YEAR 
							FROM TB_TRAN_YEARLY_ASSET_PLAN
						  ) T1
							
						  LEFT OUTER JOIN
						  (SELECT  USER_SEQ,
								   STD_YEAR,
							       MAIN_CTG,
							       SUM(AMOUNT) AS AMOUNT
							 FROM  TB_TRAN_YEARLY_ASSET_PLAN
							WHERE  USER_SEQ = #{USER_SEQ}
							 AND   MAIN_CTG = 'DW_CAT1_01'
							GROUP BY USER_SEQ, STD_YEAR, MAIN_CTG			
						   ) T2
	     				   ON T1.STD_YEAR = T2.STD_YEAR
							
						  LEFT OUTER JOIN
						  (SELECT  USER_SEQ,
								   STD_YEAR,
							       MAIN_CTG,
							       SUM(AMOUNT) AS AMOUNT
							 FROM  TB_TRAN_YEARLY_ASSET_PLAN
							WHERE  USER_SEQ = #{USER_SEQ}
						     AND   MAIN_CTG = 'DW_CAT1_02'
							GROUP BY USER_SEQ, STD_YEAR, MAIN_CTG			
						   ) T3
							
						   ON T1.STD_YEAR = T3.STD_YEAR
							
						   WHERE 1=1
						   
						   <include refid="yearlyAssetPlanWhere"/>
							 
			) X
	 
	 </select>
	 
</mapper>